if !isHelp && user && !isBot(ctx.get('User-Agent'))
  #modal-help.modal.fade(
    tabindex="-1",
    role="dialog",
    aria-labelledby="modal-help-title",
    aria-hidden="true"
  )
    .modal-dialog.modal-lg(role="document")
      .modal-content
        .modal-header.text-center.d-block
          #modal-help-title.h4.d-inline-block.ml-4= t("Ask a question")
          button.close(type="button", data-dismiss="modal", aria-label="Close")
            span(aria-hidden="true") &times;
        .modal-body
          form.ajax-form.confirm-prompt(action=l("/help"), method="POST")
            if ctx.pathWithoutLocale !== '/faq'
              p.text-center.font-weight-bold
                != t('Have you read our <a href="%s" target="_blank" rel="noopener noreferrer">FAQ</a> yet?', domain && domain.name ? l(`/faq?domain=${domain.name}`) : l("/faq"))
            .form-group.floating-label
              textarea#input-message.form-control(
                rows="8",
                required,
                maxlength=config.supportRequestMaxLength,
                name="message",
                placeholder=t("Write your message")
              )
              label(for="input-message")= t("Message")
            if config.hcaptchaEnabled
              .h-captcha(
                data-sitekey=config.hcaptchaSiteKey,
                data-error-callback="hCaptchaError",
                data-tabindex="-1"
              )
            button.btn.btn-block.btn-success(
              type="submit",
              data-toggle="tooltip",
              data-placement="bottom",
              title=t("We'll be in contact with you!")
            )= t("Send message")

if !user && !registerOrLogin
  include _register-or-login
  if !isBot(ctx.get('User-Agent')) && ctx.pathWithoutLocale !== '/register' && ctx.pathWithoutLocale !== config.loginRoute
    each verb in [ 'sign up', 'log in' ]
      .modal.fade(
        tabindex="-1",
        role="dialog",
        id=`modal-${dashify(verb)}`,
        aria-labelledby=`modal-${dashify(verb)}-title`,
        aria-hidden="true"
      )
        .modal-dialog(role="document")
          .modal-content
            .modal-header.text-center.d-block
              .h4.d-inline-block.ml-4(id=`modal-${dashify(verb)}-title`)
                if verb === 'sign up'
                  = t("Sign up now")
                else
                  = t("Welcome back!")
              button.close(
                type="button",
                data-dismiss="modal",
                aria-label="Close"
              )
                span(aria-hidden="true") &times;
            .modal-body
              +registerOrLogin(verb, true)
nav.navbar.navbar-expand-lg.fixed-top.border-light.border-bottom(
  class=user ? "navbar-dark bg-dark" : "navbar-light bg-white"
)
  div(
    class=ctx.pathWithoutLocale.startsWith("/admin/") ? "container-fluid" : "container"
  )
    a.navbar-brand.d-inline-block.m-0(
      href=user ? l(config.passportCallbackOptions.successReturnToOrRedirect) : l()
    )
      span.sr-only.sr-only-focusable Forward Email
      include ../../assets/img/logo-square-30-30.svg
      .h4.m-0.align-middle.no-js(
        class=isBot(ctx.get("User-Agent")) ? "d-none d-md-inline-block" : "d-inline-block"
      )
        span.font-weight-bold.text-primary Forward
        span.font-weight-normal.text-info Email
        //- span.text-success .net
    - const isDomainSpecificUpgrade = domain && domain.name ? ctx.pathWithoutLocale === `/my-account/domains/${domain.name}/billing` : false;
    if user && user.plan === 'free' && !domain && Array.isArray(domains)
      - const filteredDomains = domains.filter((domain) => domain.plan === "free" && !domain.is_global && domain.group === "admin");
      if filteredDomains.length > 0
        - domain = filteredDomains[0];
    if user && user.plan === 'free' && ctx.pathWithoutLocale !== '/my-account/domains/new' && !ctx.pathWithoutLocale.startsWith('/my-account/billing') && !isDomainSpecificUpgrade
      ul.list-inline.ml-auto.mr-3.d-inline-block.d-lg-none.mb-0
        a.btn.btn-sm.btn-danger(
          href=domain && domain.name ? l(`/my-account/domains/${domain.name}/billing?plan=enhanced_protection`) : l("/my-account/billing/upgrade?plan=enhanced_protection")
        )
          = t("Upgrade")
    else if !user
      ul.list-inline.ml-auto.d-inline-block.d-lg-none.mb-0
        //- do same for noscript
        if isBot(ctx.get('User-Agent'))
          li.list-inline-item
            a.btn.btn-link.text-dark.btn-sm(
              href=l("/private-business-email"),
              class=ctx.pathWithoutLocale.startsWith("/private-business-email") ? "text-decoration-underline" : ""
            )
              = t("Private Business Email")
          li.list-inline-item
            a.btn.btn-link.text-dark.btn-sm(
              href=l("/guides/send-mail-as-gmail-custom-domain"),
              class=ctx.pathWithoutLocale === "/guides/send-mail-as-gmail-custom-domain" ? "text-decoration-underline" : ""
            )= t("Send Email Custom Domain")
        else
          noscript
            li.list-inline-item
              a.btn.btn-link.text-dark.btn-sm(
                href=l("/private-business-email?pricing=true"),
                class=ctx.pathWithoutLocale.startsWith("/private-business-email") ? "text-decoration-underline" : ""
              )
                = t("Features")
            li.list-inline-item
              a.btn.btn-link.text-dark.btn-sm(
                href=l("/faq"),
                class=ctx.pathWithoutLocale.startsWith("/faq") ? "text-decoration-underline" : ""
              )
                = t("FAQ")
        if !isBot(ctx.get('User-Agent'))
          if ctx.pathWithoutLocale !== config.loginRoute
            li.list-inline-item.d-none.d-sm-inline-block.d-lg-none
              a.btn.btn-sm.btn-outline-dark(
                role=isRegisterOrLogin ? "link" : "button",
                href=l(config.loginRoute),
                data-toggle=isRegisterOrLogin ? "" : "modal-anchor",
                data-target=isRegisterOrLogin ? "" : "#modal-log-in"
              )= t("Log in")
          if ctx.pathWithoutLocale !== '/register'
            li.list-inline-item
              a.btn.btn-sm.btn-success(
                href=l("/register"),
                data-toggle=isRegisterOrLogin ? "" : "modal-anchor",
                data-target=isRegisterOrLogin ? "" : "#modal-sign-up"
              )
                = t("Sign up")
      .no-js.is-bot.d-inline-block.mr-3
    if !isBot(ctx.get('User-Agent'))
      button.navbar-toggler.d-lg-none.no-js(
        type="button",
        data-toggle="collapse",
        data-target="#navbar-header",
        aria-controls="navbar-header",
        aria-expanded="false",
        aria-label=t("Toggle navigation")
      )
        span.navbar-toggler-icon
    //- once we have responsive border utilities added to bootstrap
    //- then we can apply them to the anchor tags inside the navbar
    //- so that on mobile devices there is no border around the links
    //- <https://github.com/twbs/bootstrap/issues/25030>
    #navbar-header.collapse.navbar-collapse
      ul.navbar-nav.ml-auto
        if user
          if user.plan === 'free' && ctx.pathWithoutLocale !== '/my-account/domains/new' && !ctx.pathWithoutLocale.startsWith('/my-account/billing') && !isDomainSpecificUpgrade && ctx.pathWithoutLocale !== '/denylist'
            li.nav-item.mr-md-3.d-none.d-md-inline-block
              a.btn.btn-danger.d-block.text-left(
                href=domain && domain.name ? l(`/my-account/domains/${domain.name}/billing?plan=enhanced_protection`) : l("/my-account/billing/upgrade?plan=enhanced_protection")
              )
                = t("Upgrade")
          li.nav-item.mr-md-3
            a.btn.d-block.text-left(
              href=domain && domain.name ? l(`/faq?domain=${domain.name}`) : l("/faq"),
              class=ctx.pathWithoutLocale.startsWith("/faq") ? `btn-link ${user ? "text-white" : "text-dark"} text-decoration-underline` : `btn-link ${user ? "text-white" : "text-dark"}`
            )= t("FAQ")
          //- don't index 401 not authorized pages
          if !isBot(ctx.get('User-Agent'))
            li.nav-item.mr-md-3
              a.btn.d-block.text-left(
                href=l("/help"),
                role=isHelp ? "link" : "button",
                data-target=isHelp ? "" : "#modal-help",
                data-toggle=isHelp ? "" : "modal-anchor",
                class=ctx.pathWithoutLocale.startsWith("/help") ? `btn-link ${user ? "text-white" : "text-dark"} text-decoration-underline` : `btn-link ${user ? "text-white" : "text-dark"}`
              )= t("Help")
        else
          li.nav-item.mr-md-3
            - let pricingHref = domain && domain.name ? l(`/private-business-email?domain=${domain.name}`) : l("/private-business-email");
            if !isBot(ctx.get('User-Agent'))
              - pricingHref += "?pricing=true";
            a.btn.d-block.text-left(
              href=pricingHref,
              class=ctx.pathWithoutLocale.startsWith("/private-business-email") ? `btn-link ${user ? "text-white" : "text-dark"} text-decoration-underline` : `btn-link ${user ? "text-white" : "text-dark"}`
            )
              if isBot(ctx.get('User-Agent'))
                = t("Private Business Email")
              else
                = t("Features")
          noscript
            li.nav-item
              a.btn.d-block.text-left(
                href=l("/guides/send-mail-as-gmail-custom-domain"),
                class=ctx.pathWithoutLocale === "/guides/send-mail-as-gmail-custom-domain" ? `btn-link ${user ? "text-white" : "text-dark"} text-decoration-underline` : `btn-link ${user ? "text-white" : "text-dark"}`
              )= t("Send Email Custom Domain")
          if isBot(ctx.get('User-Agent'))
            li.nav-item.no-js
              a.btn.d-block.text-left(
                href=l("/guides/send-mail-as-gmail-custom-domain"),
                class=ctx.pathWithoutLocale === "/guides/send-mail-as-gmail-custom-domain" ? `btn-link ${user ? "text-white" : "text-dark"} text-decoration-underline` : `btn-link ${user ? "text-white" : "text-dark"}`
              )= t("Send Email Custom Domain")
          else
            //- TODO: add the /guides page
            li.nav-item.dropdown.no-js
              a#navbar-dropdown-guides.btn.dropdown-toggle.d-block.text-left.no-js(
                role="button",
                href="#",
                data-toggle="dropdown",
                aria-haspopup="true",
                aria-expanded="false",
                class=ctx.pathWithoutLocale.startsWith("/guides") ? `btn-link ${user ? "text-white" : "text-dark"} text-decoration-underline` : `btn-link ${user ? "text-white" : "text-dark"}`
              )
                = t("Guides")
              .dropdown-menu(aria-labelledby="navbar-dropdown-guides")
                a.dropdown-item(
                  href=l("/guides/send-mail-as-gmail-custom-domain"),
                  class=ctx.pathWithoutLocale === "/guides/send-mail-as-gmail-custom-domain" ? "active" : ""
                )
                  = t("Send Mail As with Gmail")
                each provider in nsProviders
                  a.dropdown-item(
                    href=domain && domain.name ? l(`/guides/${provider.slug}?domain=${domain.name}`) : l(`/guides/${provider.slug}`),
                    class=ctx.pathWithoutLocale === `/guides/${provider.slug}` ? "active" : ""
                  )= provider.name
                a.dropdown-item(
                  href=l("/faq#table-dns-management-by-registrar")
                )= t("Other providers")
            //- don't index 401 not authorized pages
            if isBot(ctx.get('User-Agent'))
              li.nav-item
                a.btn.btn-outline-dark.d-block.text-left(
                  href=l("/guides/send-mail-as-gmail-custom-domain"),
                  class=ctx.pathWithoutLocale === "/guides/send-mail-as-gmail-custom-domain" ? "active" : ""
                )= t("Send Email Custom Domain")
            else
              li.nav-item.dropdown.no-js
                //- TODO: add the /resources page
                a#navbar-dropdown-resources.btn.dropdown-toggle.d-block.text-left.no-js(
                  role="button",
                  href="#",
                  data-toggle="dropdown",
                  aria-haspopup="true",
                  aria-expanded="false",
                  class=ctx.pathWithoutLocale === "/help" || ctx.pathWithoutLocale === "/faq" ? `btn-link ${user ? "text-white" : "text-dark"} text-decoration-underline` : `btn-link ${user ? "text-white" : "text-dark"}`
                )
                  = t("Resources")
                .dropdown-menu(aria-labelledby="navbar-dropdown-resources")
                  a.dropdown-item(
                    href=domain && domain.name ? l(`/faq?domain=${domain.name}`) : l("/faq"),
                    class=ctx.pathWithoutLocale.startsWith("/faq") ? "active" : ""
                  )= t("FAQ")
                  a.dropdown-item(
                    href=l("/help"),
                    role=isHelp || !user ? "link" : "button",
                    data-target=isHelp || !user ? "" : "#modal-help",
                    data-toggle=isHelp || !user ? "" : "modal-anchor",
                    class=ctx.pathWithoutLocale.startsWith("/help") ? "active" : ""
                  )= t("Help")

        //- links that show only if you're logged in
        if user
          //- links that show if you're an admin
          if user.group === 'admin'
            li.nav-item.dropdown.ml-lg-1.mt-1.mt-lg-0
              a#navbar-dropdown-admin.btn.dropdown-toggle.d-block.text-left(
                href=l("/admin"),
                data-toggle="dropdown",
                aria-haspopup="true",
                aria-expanded="false",
                class=ctx.pathWithoutLocale.startsWith("/admin") ? `btn-link ${user ? "text-white" : "text-dark"} text-decoration-underline` : `btn-link ${user ? "text-white" : "text-dark"}`
              )
                = t("Admin")
              .dropdown-menu(aria-labelledby="navbar-dropdown-admin")
                a.dropdown-item(
                  class=ctx.pathWithoutLocale === "/admin" ? "active" : "",
                  href=l("/admin")
                )= t("Dashboard")
                a.dropdown-item(
                  class=ctx.pathWithoutLocale.startsWith("/admin/users") ? "active" : "",
                  href=l("/admin/users")
                )= t("Users")
                a.dropdown-item(
                  class=ctx.pathWithoutLocale.startsWith("/admin/domains") ? "active" : "",
                  href=l("/admin/domains")
                )= t("Domains")
                a.dropdown-item(
                  class=ctx.pathWithoutLocale.startsWith("/admin/logs") ? "active" : "",
                  href=l("/admin/logs")
                )= t("Logs")
                a.dropdown-item(
                  class=ctx.pathWithoutLocale.startsWith("/admin/allowlist") ? "active" : "",
                  href=l("/admin/allowlist")
                )= t("Allowlist")
                a.dropdown-item(
                  class=ctx.pathWithoutLocale.startsWith("/admin/denylist") ? "active" : "",
                  href=l("/admin/denylist")
                )= t("Denylist")
          li.nav-item.dropdown.ml-lg-1.mt-1.mt-lg-0
            a#navbar-dropdown-my-account.btn.dropdown-toggle.d-block.text-left(
              href=l("/my-account"),
              data-toggle="dropdown",
              aria-haspopup="true",
              aria-expanded="false",
              class=ctx.pathWithoutLocale.startsWith("/my-account") ? `btn-link ${user ? "text-white" : "text-dark"} text-decoration-underline` : `btn-link ${user ? "text-white" : "text-dark"}`
            )
              = t("My Account")
            .dropdown-menu(aria-labelledby="navbar-dropdown-my-account")
              //- a.dropdown-item(class=ctx.pathWithoutLocale === '/my-account' ? 'active' : '', href=l('/my-account'))= t('Dashboard')
              a.dropdown-item(
                class=ctx.pathWithoutLocale.startsWith("/my-account/domains") ? "active" : "",
                href=l("/my-account/domains")
              )= t("Domains")
              a.dropdown-item(
                class=ctx.pathWithoutLocale === "/my-account/profile" ? "active" : "",
                href=l("/my-account/profile")
              )= t("Profile")
              a.dropdown-item(
                class=ctx.pathWithoutLocale === "/my-account/security" ? "active" : "",
                href=l("/my-account/security")
              )= t("Security")
              a.dropdown-item(
                class=ctx.pathWithoutLocale === "/my-account/billing" ? "active" : "",
                href=l("/my-account/billing")
              )= t("Billing")
              a.dropdown-item(href=l("/logout"))= t("Log out")
        //- links that show only if you're logged out
        else
          if ctx.pathWithoutLocale !== config.loginRoute
            li.nav-item.ml-0.ml-lg-3
              a.btn.btn-outline-dark.d-block.text-left(
                role=isRegisterOrLogin ? "link" : "button",
                href=l(config.loginRoute),
                data-toggle=isRegisterOrLogin ? "" : "modal-anchor",
                data-target=isRegisterOrLogin ? "" : "#modal-log-in"
              )= t("Log in")
          if ctx.pathWithoutLocale !== '/register'
            li.nav-item.ml-3.d-none.d-lg-inline-block
              a.btn.btn-success.d-block.text-left(
                href=l("/register"),
                data-toggle=isRegisterOrLogin ? "" : "modal-anchor",
                data-target=isRegisterOrLogin ? "" : "#modal-sign-up"
              )
                = t("Sign up free")
if user
  noscript
    .alert.alert-danger.font-weight-bold.text-center.border-top-0.border-left-0.border-right-0.rounded-0.small!= t("Please enable JavaScript to use our website.")
